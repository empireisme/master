X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
tree$cptable
tree$splits
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
return(A)
}
numberofleafs <- replicate(2000,mysimulation())
replicate(2000,mysimulation())
replicate(2000,mysimulation1())
mysimulation1 <- function(  ){
N=1000
episolon=rnorm(  N,0,0.01    )
x1=rnorm(N,0,sd=1)
x2=rnorm(N,0,sd=1)
x3=rnorm(N,0,sd=1)
x4=rnorm(N,0,sd=1)
x5=rnorm(N,0,sd=1)
x6=rnorm(N,0,sd=1)
x7=rnorm(N,0,sd=1)
x8=rnorm(N,0,sd=1)
x9=rnorm(N,0,sd=1)
x10=rnorm(N,0,sd=1)
x11=rnorm(N,0,sd=1)
x12=rnorm(N,0,sd=1)
x13=rnorm(N,0,sd=1)
x14=rnorm(N,0,sd=1)
x15=rnorm(N,0,sd=1)
x16=rnorm(N,0,sd=1)
x17=rnorm(N,0,sd=1)
x18=rnorm(N,0,sd=1)
x19=rnorm(N,0,sd=1)
x20=rnorm(N,0,sd=1)
X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
tree$cptable
tree$splits
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
return(A)
}
numberofleafs <- replicate(2000,mysimulation1())
knitr::opts_chunk$set(echo = TRUE)
#install.packages("devtools")
library(devtools)
#install_github("susanathey/causalTree")
library(causalTree)
library(MASS)
library(rpart)
mysimulation1 <- function(  ){
N=1000
episolon=rnorm(  N,0,0.01    )
x1=rnorm(N,0,sd=1)
x2=rnorm(N,0,sd=1)
x3=rnorm(N,0,sd=1)
x4=rnorm(N,0,sd=1)
x5=rnorm(N,0,sd=1)
x6=rnorm(N,0,sd=1)
x7=rnorm(N,0,sd=1)
x8=rnorm(N,0,sd=1)
x9=rnorm(N,0,sd=1)
x10=rnorm(N,0,sd=1)
x11=rnorm(N,0,sd=1)
x12=rnorm(N,0,sd=1)
x13=rnorm(N,0,sd=1)
x14=rnorm(N,0,sd=1)
x15=rnorm(N,0,sd=1)
x16=rnorm(N,0,sd=1)
x17=rnorm(N,0,sd=1)
x18=rnorm(N,0,sd=1)
x19=rnorm(N,0,sd=1)
x20=rnorm(N,0,sd=1)
X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
tree$cptable
tree$splits
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
return(A)
}
numberofleafs <- replicate(2000,mysimulation1())
library(MASS)
library(rpart)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
mysimulation1 <- function(  ){
N=1000
episolon=rnorm(  N,0,0.01    )
x1=rnorm(N,0,sd=1)
x2=rnorm(N,0,sd=1)
x3=rnorm(N,0,sd=1)
x4=rnorm(N,0,sd=1)
x5=rnorm(N,0,sd=1)
x6=rnorm(N,0,sd=1)
x7=rnorm(N,0,sd=1)
x8=rnorm(N,0,sd=1)
x9=rnorm(N,0,sd=1)
x10=rnorm(N,0,sd=1)
x11=rnorm(N,0,sd=1)
x12=rnorm(N,0,sd=1)
x13=rnorm(N,0,sd=1)
x14=rnorm(N,0,sd=1)
x15=rnorm(N,0,sd=1)
x16=rnorm(N,0,sd=1)
x17=rnorm(N,0,sd=1)
x18=rnorm(N,0,sd=1)
x19=rnorm(N,0,sd=1)
x20=rnorm(N,0,sd=1)
X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
tree$cptable
tree$splits
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
return(A)
}
numberofleafs <- replicate(2000,mysimulation1())
replicate(2000,mysimulation1())
replicate(20,mysimulation1())
library(MASS)
library(rpart)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
mysimulation1 <- function(  ){
N=1000
episolon=rnorm(  N,0,0.01    )
x1=rnorm(N,0,sd=1)
x2=rnorm(N,0,sd=1)
x3=rnorm(N,0,sd=1)
x4=rnorm(N,0,sd=1)
x5=rnorm(N,0,sd=1)
x6=rnorm(N,0,sd=1)
x7=rnorm(N,0,sd=1)
x8=rnorm(N,0,sd=1)
x9=rnorm(N,0,sd=1)
x10=rnorm(N,0,sd=1)
x11=rnorm(N,0,sd=1)
x12=rnorm(N,0,sd=1)
x13=rnorm(N,0,sd=1)
x14=rnorm(N,0,sd=1)
x15=rnorm(N,0,sd=1)
x16=rnorm(N,0,sd=1)
x17=rnorm(N,0,sd=1)
x18=rnorm(N,0,sd=1)
x19=rnorm(N,0,sd=1)
x20=rnorm(N,0,sd=1)
X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
return(A)
}
numberofleafs <- replicate(20,mysimulation1())
mean(numberofleafs )
replicate(20,mysimulation1())
N=1000
episolon=rnorm(  N,0,0.01    )
x1=rnorm(N,0,sd=1)
x2=rnorm(N,0,sd=1)
x3=rnorm(N,0,sd=1)
x4=rnorm(N,0,sd=1)
x5=rnorm(N,0,sd=1)
x6=rnorm(N,0,sd=1)
x7=rnorm(N,0,sd=1)
x8=rnorm(N,0,sd=1)
x9=rnorm(N,0,sd=1)
x10=rnorm(N,0,sd=1)
x11=rnorm(N,0,sd=1)
x12=rnorm(N,0,sd=1)
x13=rnorm(N,0,sd=1)
x14=rnorm(N,0,sd=1)
x15=rnorm(N,0,sd=1)
x16=rnorm(N,0,sd=1)
x17=rnorm(N,0,sd=1)
x18=rnorm(N,0,sd=1)
x19=rnorm(N,0,sd=1)
x20=rnorm(N,0,sd=1)
X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
A
tree
tree$frame
tree$where
knitr::opts_chunk$set(echo = TRUE)
?hpfilter
??hpfilter
install.packages("mFilter")
require(mFilter)
data(unemp)
opar <- par(no.readonly=TRUE)
unemp.hp <- hpfilter(unemp)
plot(unemp.hp)
knitr::opts_chunk$set(echo = TRUE)
require(mFilter)
data(unemp)
hpfilter(unemp)
unemp.hp <- hpfilter(unemp)
plot(unemp.hp)
unemp.hp1 <- hpfilter(unemp, drift=TRUE)
unemp.hp2 <- hpfilter(unemp, freq=800, drift=TRUE)
unemp.hp3 <- hpfilter(unemp, freq=12,type="frequency",drift=TRUE)
unemp.hp4 <- hpfilter(unemp, freq=52,type="frequency",drift=TRUE)
par(mfrow=c(2,1),mar=c(3,3,2,1),cex=.8)
plot(unemp.hp1$x,  ylim=c(2,13),
main="Hodrick-Prescott filter of unemployment: Trend, drift=TRUE",
col=1, ylab="")
lines(unemp.hp1$trend,col=2)
plot(unemp.hp)
unemp.hp1 <- hpfilter(unemp, drift=TRUE)
unemp.hp2 <- hpfilter(unemp, freq=800, drift=TRUE)
unemp.hp3 <- hpfilter(unemp, freq=12,type="frequency",drift=TRUE)
unemp.hp4 <- hpfilter(unemp, freq=52,type="frequency",drift=TRUE)
par(mfrow=c(2,1),mar=c(3,3,2,1),cex=.8)
plot(unemp.hp1$x,  ylim=c(2,13),
main="Hodrick-Prescott filter of unemployment: Trend, drift=TRUE",
col=1, ylab="")
lines(unemp.hp1$trend,col=2)
lines(unemp.hp2$trend,col=3)
lines(unemp.hp3$trend,col=4)
lines(unemp.hp4$trend,col=5)
legend("topleft",legend=c("series", "lambda=1600", "lambda=800",
"freq=12", "freq=52"), col=1:5, lty=rep(1,5), ncol=1)
unemp.hp <- hpfilter(unemp)
plot(unemp.hp)
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
View(data)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
View(data)
data <- data[-1,]
View(data)
library(TSA)
install.packages("TSA")
library(TSA)
?AR
??AR
?ar
ar(data)
x=data[,4]
ar(x)
View(x)
ar(x)
x=data[1:30,4]
View(x)
ar(x)
acf(x)
install.packages("lubridate")
require(lubridate)
ym(data[1,])
ymd(data[1,])
ts(x, frequency = 12)
a <- ts(x, frequency = 12)
a <- ts(1:30, frequency = 12, start = c(2011,3))
a
data <- data[-1,]
x=data[,4]
library(TSA)
a <- ts(x, frequency = 12, start = c(2001,3))
a
View(x)
a <- ts(1:30, frequency = 12, start = c(2011,3))
x <- as.numeric(x)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
data <- data[-1,]
x=data[,4]
type(x)
class(x)
x <- as.numeric(x)
x1 <- as.numeric(x)
a <- ts(x, frequency = 12, start = c(2001,1))
a
print(x)
x=data[,4]
print(x)
print(x)
x
print("A")
x=data[,4]
print(x)
class(x)
x[1]
knitr::opts_chunk$set(echo = TRUE)
require(lubridate)
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
data <- data[-1,]
x=data[,4]
print(x)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
data <- data[-1,]
x=data[,4]
x1=as.data.frame(x)
print(x1)
x1[1]
class(x1)
x2=as.numeric(x1)
x2=as.numeric(unlist(x1))
x=data[,4]
x2=as.numeric(unlist(x))
x3=suppressWarnings(as.numeric(unlist(x)))
as.numeric(data[[4]])
View(x1)
as.integer(x1)
class(data)
x1
View(x1)
x1[1]
x1[[1]]
as.numeric(x1[[1]])
as.numeric(unlist(x1[[1]]))
x1[[1]]
X=x1[[1]]
X=as.numeric(X)
X=x1[[1]]
class(X)
as.numeric(X)
View(x)
data <- read_csv("C:/Users/User/Downloads/123.csv")
View(data)
data <- read_csv("C:/Users/User/Downloads/123.csv",header=F)
library(readr)
X123 <- read_csv("C:/Users/User/Downloads/123.csv",
col_names = FALSE)
View(X123)
a <- ts(X123, frequency = 12, start = c(2001,1))
print(a)
use <- ts(X123, frequency = 12, start = c(2001,1))
fit <- arima(use, order = c(1,0,0), list(order=c(2,1,0), period=12))
View(fit)
?arima
fit <- arima(use, period=12)
fit <- arima(use)
summary(fit)
plot(fit)
ar(use)
fit2=ar(use)
summary(fit2)
plot(fit2)
plot(use)
plot(use)
setwd("~/GitHub/master")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/master")
read.table("surbibaltable")
read.table("survivaltable")
read.table("survivaltable.txt")
setwd("~/GitHub/master")
data <- read.table("survivaltable.txt",header = T)
View(data)
install.packages("coxph")
install.packages("survival")
setwd("~/GitHub/master")
require(survival)
data(aml)
Surv(aml$time, aml$status)
aml$time
aml$status
Surv(data$t,data$d)
data(aml)
Surv(aml$time, aml$status)
aml$time
aml$status
y=Surv(data$t,data$d)
sex <- as.factor(data$sex)
race <- as.factor(data$race)
age <- data$age
entry <- data$entry
far <- data$far
X=list(sex,race,age,entry,far    )
View(X)
coxph(y ~ sex+race+entry+far+age, X)
fit <- coxph(y ~ sex+race+entry+far+age, X)
summary(fit)
