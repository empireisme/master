mysimulation1 <- function(  ){
N=1000
episolon=rnorm(  N,0,0.01    )
x1=rnorm(N,0,sd=1)
x2=rnorm(N,0,sd=1)
x3=rnorm(N,0,sd=1)
x4=rnorm(N,0,sd=1)
x5=rnorm(N,0,sd=1)
x6=rnorm(N,0,sd=1)
x7=rnorm(N,0,sd=1)
x8=rnorm(N,0,sd=1)
x9=rnorm(N,0,sd=1)
x10=rnorm(N,0,sd=1)
x11=rnorm(N,0,sd=1)
x12=rnorm(N,0,sd=1)
x13=rnorm(N,0,sd=1)
x14=rnorm(N,0,sd=1)
x15=rnorm(N,0,sd=1)
x16=rnorm(N,0,sd=1)
x17=rnorm(N,0,sd=1)
x18=rnorm(N,0,sd=1)
x19=rnorm(N,0,sd=1)
x20=rnorm(N,0,sd=1)
X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
return(A)
}
numberofleafs <- replicate(20,mysimulation1())
mean(numberofleafs )
replicate(20,mysimulation1())
N=1000
episolon=rnorm(  N,0,0.01    )
x1=rnorm(N,0,sd=1)
x2=rnorm(N,0,sd=1)
x3=rnorm(N,0,sd=1)
x4=rnorm(N,0,sd=1)
x5=rnorm(N,0,sd=1)
x6=rnorm(N,0,sd=1)
x7=rnorm(N,0,sd=1)
x8=rnorm(N,0,sd=1)
x9=rnorm(N,0,sd=1)
x10=rnorm(N,0,sd=1)
x11=rnorm(N,0,sd=1)
x12=rnorm(N,0,sd=1)
x13=rnorm(N,0,sd=1)
x14=rnorm(N,0,sd=1)
x15=rnorm(N,0,sd=1)
x16=rnorm(N,0,sd=1)
x17=rnorm(N,0,sd=1)
x18=rnorm(N,0,sd=1)
x19=rnorm(N,0,sd=1)
x20=rnorm(N,0,sd=1)
X=data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
eta_x=1/2*x1+x2
Kappa_x=1/2*x1
w=rbinom(N,1,0.5)
treatment <- w
makeY=function(eta,Kappa ){
Y=eta+1/2*(2*w-1)*Kappa+episolon
}
Y1=makeY(eta_x,Kappa_x     )
Y=eta_x+1/2*(2*w-1)*Kappa_x+episolon
x=c(3,-5,4)
indicator(x)
indicator=function(x){
y <- ifelse(x>0,1,0)
return(x*y)
}
eta_x=1/2*(x1+x2)+(x3+x4+x5+x6)
Kappa_x=indicator(x1)+indicator(x2)
Y2=makeY(eta_x,Kappa_x)
design2 <- data.frame( x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,Y2,treatment    )
tree <- causalTree( Y2~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10 ,data=design2 ,treatment = design2$treatment ,split.Rule = "CT", cv.option = "CT", split.Honest = T, cv.Honest = T, split.Bucket = F,
xval = 5, cp = 0, minsize = 20, propensity = 0.5  )
opcp <- tree$cptable[,1][which.min(tree$cptable[,4])]
opfit <- prune(tree, opcp)
A <- sum(opfit$frame$var == "<leaf>")
A
tree
tree$frame
tree$where
knitr::opts_chunk$set(echo = TRUE)
?hpfilter
??hpfilter
install.packages("mFilter")
require(mFilter)
data(unemp)
opar <- par(no.readonly=TRUE)
unemp.hp <- hpfilter(unemp)
plot(unemp.hp)
knitr::opts_chunk$set(echo = TRUE)
require(mFilter)
data(unemp)
hpfilter(unemp)
unemp.hp <- hpfilter(unemp)
plot(unemp.hp)
unemp.hp1 <- hpfilter(unemp, drift=TRUE)
unemp.hp2 <- hpfilter(unemp, freq=800, drift=TRUE)
unemp.hp3 <- hpfilter(unemp, freq=12,type="frequency",drift=TRUE)
unemp.hp4 <- hpfilter(unemp, freq=52,type="frequency",drift=TRUE)
par(mfrow=c(2,1),mar=c(3,3,2,1),cex=.8)
plot(unemp.hp1$x,  ylim=c(2,13),
main="Hodrick-Prescott filter of unemployment: Trend, drift=TRUE",
col=1, ylab="")
lines(unemp.hp1$trend,col=2)
plot(unemp.hp)
unemp.hp1 <- hpfilter(unemp, drift=TRUE)
unemp.hp2 <- hpfilter(unemp, freq=800, drift=TRUE)
unemp.hp3 <- hpfilter(unemp, freq=12,type="frequency",drift=TRUE)
unemp.hp4 <- hpfilter(unemp, freq=52,type="frequency",drift=TRUE)
par(mfrow=c(2,1),mar=c(3,3,2,1),cex=.8)
plot(unemp.hp1$x,  ylim=c(2,13),
main="Hodrick-Prescott filter of unemployment: Trend, drift=TRUE",
col=1, ylab="")
lines(unemp.hp1$trend,col=2)
lines(unemp.hp2$trend,col=3)
lines(unemp.hp3$trend,col=4)
lines(unemp.hp4$trend,col=5)
legend("topleft",legend=c("series", "lambda=1600", "lambda=800",
"freq=12", "freq=52"), col=1:5, lty=rep(1,5), ncol=1)
unemp.hp <- hpfilter(unemp)
plot(unemp.hp)
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
View(data)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
View(data)
data <- data[-1,]
View(data)
library(TSA)
install.packages("TSA")
library(TSA)
?AR
??AR
?ar
ar(data)
x=data[,4]
ar(x)
View(x)
ar(x)
x=data[1:30,4]
View(x)
ar(x)
acf(x)
install.packages("lubridate")
require(lubridate)
ym(data[1,])
ymd(data[1,])
ts(x, frequency = 12)
a <- ts(x, frequency = 12)
a <- ts(1:30, frequency = 12, start = c(2011,3))
a
data <- data[-1,]
x=data[,4]
library(TSA)
a <- ts(x, frequency = 12, start = c(2001,3))
a
View(x)
a <- ts(1:30, frequency = 12, start = c(2011,3))
x <- as.numeric(x)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
data <- data[-1,]
x=data[,4]
type(x)
class(x)
x <- as.numeric(x)
x1 <- as.numeric(x)
a <- ts(x, frequency = 12, start = c(2001,1))
a
print(x)
x=data[,4]
print(x)
print(x)
x
print("A")
x=data[,4]
print(x)
class(x)
x[1]
knitr::opts_chunk$set(echo = TRUE)
require(lubridate)
library(readr)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
data <- data[-1,]
x=data[,4]
print(x)
data <- read_csv("C:/Users/User/Downloads/_w10801162256495432371421-c0850302.csv")
data <- data[-1,]
x=data[,4]
x1=as.data.frame(x)
print(x1)
x1[1]
class(x1)
x2=as.numeric(x1)
x2=as.numeric(unlist(x1))
x=data[,4]
x2=as.numeric(unlist(x))
x3=suppressWarnings(as.numeric(unlist(x)))
as.numeric(data[[4]])
View(x1)
as.integer(x1)
class(data)
x1
View(x1)
x1[1]
x1[[1]]
as.numeric(x1[[1]])
as.numeric(unlist(x1[[1]]))
x1[[1]]
X=x1[[1]]
X=as.numeric(X)
X=x1[[1]]
class(X)
as.numeric(X)
View(x)
data <- read_csv("C:/Users/User/Downloads/123.csv")
View(data)
data <- read_csv("C:/Users/User/Downloads/123.csv",header=F)
library(readr)
X123 <- read_csv("C:/Users/User/Downloads/123.csv",
col_names = FALSE)
View(X123)
a <- ts(X123, frequency = 12, start = c(2001,1))
print(a)
use <- ts(X123, frequency = 12, start = c(2001,1))
fit <- arima(use, order = c(1,0,0), list(order=c(2,1,0), period=12))
View(fit)
?arima
fit <- arima(use, period=12)
fit <- arima(use)
summary(fit)
plot(fit)
ar(use)
fit2=ar(use)
summary(fit2)
plot(fit2)
plot(use)
plot(use)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
X123 <- read_csv("C:/Users/User/Downloads/123.csv",
col_names = FALSE)
View(X123)
library(readr)
timedata <- read_csv("C:/Users/User/Downloads/time.csv",
col_names = FALSE)
library(readr)
timedata <- read_csv("C:/Users/User/Downloads/time.csv",
col_names = FALSE)
View(timedata )
use <- ts(timedata, frequency = 12, start = c(1999,1))
plot(use)
library(tseries)
library(forecast)
install.packages("tseries")
install.packages("forecast")
library(readr)
library(tseries)
library(forecast)
timedata <- read_csv("C:/Users/User/Downloads/time.csv",
col_names = FALSE)
View(timedata )
air <- ts(timedata, frequency = 12, start = c(1999,1))
air
length(air)
sair<-ts(as.vector(air[1:200]),frequency=12,start=c(1999,1))
sair
sair<-ts(as.vector(air[1:204]),frequency=12,start=c(1999,1))
sair
tsdisplay(sair)
adf.test(sair)
auto.arima(sair)
fit1<-arima(sair,order=c(0,1,1),seasonal=list(order=c(1,1,1),period=12))
fit2<-arima(sair,order=c(1,0,0),seasonal=list(order=c(0,1,0),period=12))
tsdiag(fit1)
f.p1<-forecast(fit1,h=36,level=c(99.5))
plot(f.p1)
f.p1
f.p1[,2]
class(f.p1)
f.p1$fitted
f.p1
f.p1$series
f.p1$method
f.p1$x
f.p1
f.p1[[1]]
f.p1[[2]]
f.p1[[3]]
f.p1[[4]]
yhat <- f.p1[[4]]
as.numeric(yhat)
yhatnumeric <- as.numeric(yhat)
yhatnumeric
length(air)
yhat <- f.p1[[4]]
yhatnumeric <- as.numeric(yhat)
ytest <- air[205:239]
plot(yhatnumeric   , ytest  )
length(ytest)
ytest <- air[205:239]
f.p1<-forecast(fit1,h=length(ytest),level=c(99.5))
yhat <- f.p1[[4]]
yhatnumeric <- as.numeric(yhat)
plot(yhatnumeric   , ytest  )
plot(f.p1)
lines(f.p1$fitted,col="green")
plot(f.p1)
lines(f.p1$fitted,col="green")
lines(air,col="red")
plot(f.p1)
lines(f.p1$fitted,col="green")
lines(air,col="red")
yhatnumeric-ytest
abs(yhatnumeric-ytest)
mae=mean(abs(yhatnumeric-ytest))
mae
f.p1[[4]]
abs(yhatnumeric-ytest)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/master")
setwd("~/GitHub/master/data")
library(readxl)
maindata <- read_excel("maindata.xlsx", sheet = "original")
View(maindata)
setwd("~/GitHub/master/data")
library(readxl)
maindata <- read_excel("maindata.xlsx", sheet = "original")
View(maindata)
france.lt <- lifetable(fr.mort)
setwd("~/GitHub/master/data")
library(readxl)
maindata <- read_excel("maindata.xlsx", sheet = "original")
View(maindata)
maindatause <-maindata[,c(3,6,7,8)]
View(maindatause)
maindatause <-maindata[,c(3,6,7,8)]
library(data.table)
df <- as.data.table(maindatause)
View(df)
df[,2]
A <- df[,2]
A
library(tidyr)
setnames(df,"MyName.1", "MyNewName")
setnames(df,"a", "b","c","d")
library(plyr)
mydf <- rename(df, c("拆除執照年分" = "MyNewName"))
View(mydf)
mydf <- rename(df, c("拆除執照年分" = "MyNewName"))
View(mydf)
deathyear<- df[,1]
View(deathyear)
deathyear<- df[,1]
bornyear <- df[,2]
dfuse <- cbind(deathyear,bornyear)
View(dfuse)
colnames(df)=c(  "deathyear","bornyear","material","area")
View(df)
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
completeFun(df, "bornyear")
maindatause <-maindata[,c(3,6,7,8)]
df <- maindatause
colnames(df)=c(  "deathyear","bornyear","material","area")
View(df)
completeFun(df, "bornyear")
dfuse <- completeFun(df, "bornyear")
View(dfuse)
as.numeric(dfuse$bornyear)
dfuse$bornyear
dfuse$bornyear[1]
A <- dfuse$bornyear[1]
substring(A, 1, 1)
substring(A, 1, 3)
substring(dfuse$bornyear, 1, 3)
bornyear <- as.numeric(substring(dfuse$bornyear, 1, 3))
bornyear <- as.numeric(substring(dfuse$bornyear, 1, 3))
deathyear <- as.numeric(   dfuse$deathyear        )
dfuse <-cbind(bornyear,deathyear,dfuse[,3],dfuse[,4])
View(dfuse)
age <- deathyear-bornyear
age
sort(age)
which(age==-4)
maindatause <-maindata[,c(3,6,7,8)] #留下有用的欄位
df <- maindatause
colnames(df)=c(  "deathyear","bornyear","material","area")
dfuse <- completeFun(df, "bornyear")
which(age<0)
library(tidyr)
library(data.table)
library(plyr)
maindatause <-maindata[,c(3,6,7,8)] #留下有用的欄位
df <- maindatause
colnames(df)=c(  "deathyear","bornyear","material","area")
dfuse <- completeFun(df, "bornyear")
A <- dfuse$bornyear[1]
substring(A, 1, 3)
bornyear <- as.numeric(substring(dfuse$bornyear, 1, 3))
deathyear <- as.numeric(   dfuse$deathyear        )
dfuse <-cbind(bornyear,deathyear,dfuse[,3],dfuse[,4])
age <- deathyear-bornyear
which(age<0)
dfuse <- dfuse[-which(age<0),]
View(dfuse)
which(age<0)
dfuse <- dfuse[-which(age<0),]
library(tidyr)
library(data.table)
library(plyr)
maindatause <-maindata[,c(3,6,7,8)] #留下有用的欄位
df <- maindatause
colnames(df)=c(  "deathyear","bornyear","material","area")
dfuse <- completeFun(df, "bornyear")
A <- dfuse$bornyear[1]
substring(A, 1, 3)
bornyear <- as.numeric(substring(dfuse$bornyear, 1, 3))
deathyear <- as.numeric(   dfuse$deathyear        )
dfuse <-cbind(bornyear,deathyear,dfuse[,3],dfuse[,4])
age <- deathyear-bornyear
which(age<0)
dfusefinal <- dfuse[-which(age<0),]
View(dfusefinal)
agefinal=dfusefinal $deathyear-dfusefinal$bornyear
dfusefinal <- cbind(dfusefinal,agefinal)
View(dfusefinal)
plot(agefinal)
plot(agefinal,type="l")
agefinal
hist(agefinal)
count(agefinal)
agecount <- count(agefinal)
View(agecount)
plot(density(agecount))
plot(density(agefinal))
agecount
dfusefinal
View(dfusefinal)
y=Surv(dfusefinal$agefinal)
require(survival)
y=Surv(dfusefinal$agefinal)
X=dfusefinal[,-5]
fit <- coxph(y ~ bornyear,X )
summary(fit)
setwd("~/GitHub/master/data")
library(readxl)
require(survival)
maindata <- read_excel("maindata.xlsx", sheet = "original")
View(maindata)
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
library(tidyr)
library(data.table)
library(plyr)
maindatause <-maindata[,c(3,6,7,8)] #留下有用的欄位
df <- maindatause
colnames(df)=c(  "deathyear","bornyear","material","area")
dfuse <- completeFun(df, "bornyear")
A <- dfuse$bornyear[1]
substring(A, 1, 3)
bornyear <- as.numeric(substring(dfuse$bornyear, 1, 3))
deathyear <- as.numeric(   dfuse$deathyear        )
dfuse <-cbind(bornyear,deathyear,dfuse[,3],dfuse[,4])
age <- deathyear-bornyear
which(age<0)
dfusefinal <- dfuse[-which(age<0),]
agefinal=dfusefinal $deathyear-dfusefinal$bornyear
dfusefinal <- cbind(dfusefinal,agefinal)
hist(agefinal)
agecount <- count(agefinal)
plot(density(agefinal))
X=dfusefinal[,-5]
y=Surv(dfusefinal$agefinal)
fit <- coxph(y ~ bornyear,X )
summary(fit)
agecount
deathyear
sort(deathyear)
